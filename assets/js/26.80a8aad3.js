(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{220:function(n,s,e){"use strict";e.r(s);var i=e(0),t=Object(i.a)({},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"grape-cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grape-cli","aria-hidden":"true"}},[n._v("#")]),n._v(" grape-cli")]),n._v(" "),e("h2",{attrs:{id:"目录结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录结构","aria-hidden":"true"}},[n._v("#")]),n._v(" 目录结构")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("./\n├── .editorconfig\n├── .env.development\n├── .env.production\n├── .env.uat\n├── .gitignore\n├── .vcmrc\n├── README.md\n├── babel.config.js\n├── deploy\n├── fis-conf.js\n├── package-lock.json\n├── package.json\n├── postcss.config.js\n├── public\n│   ├── favicon.ico\n│   └── index.html\n├── src\n│   ├── APP.vue\n│   ├── api\n│   │   ├── home\n│   │   │   └── api.js\n│   │   └── index.js\n│   ├── components\n│   │   ├── common\n│   │   │   └── index.js\n│   │   ├── element-ui\n│   │   │   └── index.js\n│   │   └── previewImg\n│   │       └── main.vue\n│   ├── config\n│   ├── directive\n│   │   ├── clipboard\n│   │   │   └── index.js\n│   │   └── common\n│   │       └── index.js\n│   ├── filters\n│   │   ├── common\n│   │   │   └── index.js\n│   │   └── timeAgo\n│   │       └── index.js\n│   ├── lib\n│   │   ├── cookie.js\n│   │   ├── fetch.js\n│   │   ├── index.js\n│   │   ├── localStorge.js\n│   │   ├── open-window.js\n│   │   ├── sessionStorge.js\n│   │   ├── stringFormat.js\n│   │   └── timeFormat.js\n│   ├── main.js\n│   ├── mixins\n│   │   └── common\n│   │       └── index.js\n│   ├── router\n│   │   ├── home\n│   │   │   └── index.js\n│   │   └── index.js\n│   ├── store\n│   │   ├── base\n│   │   │   ├── actions.js\n│   │   │   ├── getters.js\n│   │   │   ├── mutations.js\n│   │   │   └── state.js\n│   │   └── index.js\n│   └── views\n│       └── home\n├── static\n└── vue.config.js\n")])])]),e("h3",{attrs:{id:"目录说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录说明","aria-hidden":"true"}},[n._v("#")]),n._v(" 目录说明")]),n._v(" "),e("ul",[e("li",[n._v("README.md")])]),n._v(" "),e("p",[n._v("项目说明文档")]),n._v(" "),e("ul",[e("li",[n._v("babel.config.js")])]),n._v(" "),e("p",[n._v("babel 的配置文件")]),n._v(" "),e("ul",[e("li",[n._v("deploy")])]),n._v(" "),e("p",[n._v("部署相关的文件")]),n._v(" "),e("ul",[e("li",[n._v("fis-conf.js")])]),n._v(" "),e("p",[n._v("fis3 配置文件，用于手动将打包好的文件推送到服务器。")]),n._v(" "),e("ul",[e("li",[n._v("postcss.config.js")])]),n._v(" "),e("p",[n._v("postcss 配置文件")]),n._v(" "),e("ul",[e("li",[n._v("public")])]),n._v(" "),e("p",[n._v("html 文件")]),n._v(" "),e("ul",[e("li",[n._v("src/APP.vue")])]),n._v(" "),e("p",[n._v("项目根组件")]),n._v(" "),e("ul",[e("li",[n._v("src/api")])]),n._v(" "),e("p",[n._v("与服务端进行交互。每个模块的接口定义以模块名为文件夹放在 api.js 中。 src/api/index.js 会遍历 src/api/ 下所有模块中的 api.js,并将所有的接口定义导出。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("./\n├── api\n│   │---├── home\n│   │   │   └── api.js\n│   │   └── index.js\n")])])]),e("ul",[e("li",[n._v("src/components")])]),n._v(" "),e("p",[n._v("所有的组件")]),n._v(" "),e("p",[n._v("src/components/element-ui/index.js 异步导入所有的 element-ui 中的组件，这样可以在用到 element-ui 组件的时候才下载代码。")]),n._v(" "),e("p",[n._v("src/components/common 全局组件。src/components/common/index.js 会遍历 src/components/common 中所有的组件目录从而得到组件的定义然后注册为全局组件。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("./\nsrc\n├── components\n│   │   ├── common\n│   │   │   └── index.js\n│   │   ├── element-ui\n│   │   │   └── index.js\n│   │   └── previewImg  // 业务组件\n│   │       └── main.vue\n")])])]),e("blockquote",[e("p",[n._v("每一个组件都定义在一个以组件名命名的文件夹中，并且文件名为 main.vue")])]),n._v(" "),e("ul",[e("li",[n._v("src/directive")])]),n._v(" "),e("p",[n._v("所有的指令")]),n._v(" "),e("p",[n._v("src/directive/common 全局指令。src/directive/common/index.js 会遍历 src/directive/common 中所有的指令目录从而得到指令的定义然后组册为全局指令。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("./\nsrc\n ├── directive\n        ├── clipboard\n        │   └── index.js\n        └── common\n           └── index.js\n")])])]),e("blockquote",[e("p",[n._v("每一个指令都定义在一个以指令名命名的文件夹中，并且文件名为 index.js")])]),n._v(" "),e("ul",[e("li",[n._v("src/filters")])]),n._v(" "),e("p",[n._v("所有的过滤器")]),n._v(" "),e("p",[n._v("src/filters/common 全局指令。src/filters/common/index.js 会遍历 src/filters/common 中所有的过滤器目录从而得到过滤器的定义然后注册为全局过滤器。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("./\nsrc\n├── filters\n│   │   ├── common\n│   │   │   └── index.js\n│   │   └── timeAgo\n│   │       └── index.js\n")])])]),e("blockquote",[e("p",[n._v("每一个过滤器都定义在一个以过滤器名命名的文件夹中，并且文件名为 index.js")])]),n._v(" "),e("ul",[e("li",[n._v("src/lib")])]),n._v(" "),e("p",[n._v("工具方法")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("./\nsrc\n├── lib\n│   │   ├── cookie.js\n│   │   ├── fetch.js\n│   │   ├── index.js\n│   │   ├── localStorge.js\n│   │   ├── open-window.js\n│   │   ├── sessionStorge.js\n│   │   ├── stringFormat.js\n│   │   └── timeFormat.js\n")])])]),e("h2",{attrs:{id:"作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用","aria-hidden":"true"}},[n._v("#")]),n._v(" 作用")]),n._v(" "),e("ol",[e("li",[n._v("项目初始化配置")])]),n._v(" "),e("p",[n._v("eslint,commit-msg 校验，fis3 配置，package.json 配置")]),n._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[n._v("规定项目的目录结构")])]),n._v(" "),e("li",[e("p",[n._v("内置工具方法")])]),n._v(" "),e("li",[e("p",[n._v("内置组件")])])])])},[],!1,null,null,null);s.default=t.exports}}]);