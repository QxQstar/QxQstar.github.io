(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{219:function(e,r,t){"use strict";t.r(r);var a=t(0),s=Object(a.a)({},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"vue-create-创建项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-create-创建项目","aria-hidden":"true"}},[e._v("#")]),e._v(" vue create 创建项目")]),e._v(" "),t("p",[e._v("当使用"),t("code",[e._v("vue create")]),e._v("创建项目，如果项目的目录已经存在，那么 Vue Cli 就会提示：1. overwrite，2. merge，3. cancel。")]),e._v(" "),t("h2",{attrs:{id:"overwrite"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overwrite","aria-hidden":"true"}},[e._v("#")]),e._v(" overwrite")]),e._v(" "),t("p",[e._v("删除目录，然后用 preset 的值重新生成项目")]),e._v(" "),t("h2",{attrs:{id:"merge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#merge","aria-hidden":"true"}},[e._v("#")]),e._v(" merge")]),e._v(" "),t("p",[e._v("直接用 preset 的值生成项目，如果新生成的某个文件在目录中已经存在，那么会用新的内容覆盖旧的内容；如果目录中存在额外的文件，那么这个文件保持不变")]),e._v(" "),t("h2",{attrs:{id:"cancel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cancel","aria-hidden":"true"}},[e._v("#")]),e._v(" cancel")]),e._v(" "),t("p",[e._v("停止创建项目")]),e._v(" "),t("h2",{attrs:{id:"preset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#preset","aria-hidden":"true"}},[e._v("#")]),e._v(" preset")]),e._v(" "),t("p",[e._v("在 Vue CLI 3.x 中 preset 是生成项目的关键。在使用 Vue CLI 3.x 创建 Vue 项目时你可以自己设置 preset 参数，在没有设置 preset 的情况下，Vue CLI 3.x 会使用 inquirer 收集你创建项目选择或者输入的各个参数，然后生成 preset，preset 中包含了 plugins,Vue CLI 3.x 是基于 plugins 生成项目的")])])},[],!1,null,null,null);r.default=s.exports}}]);